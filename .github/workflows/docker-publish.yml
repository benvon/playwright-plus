name: Docker

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  schedule:
    - cron: '30 9 * * 0'
  push:
    branches: [ "main" ]
    # Publish semver tags as releases.
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ "main" ]

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}

jobs:
  generate-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Generate matrix from Dockerfiles
        id: set-matrix
        run: |
          # Find all Dockerfile.* files in the repository root
          files=$(find . -maxdepth 1 -name 'Dockerfile.*' -type f)
          echo "Found Dockerfiles:"
          echo "$files"
          matrix="{\"include\":["
          sep=""
          for file in $files; do
            # Extract the suffix after "Dockerfile."
            tag=$(basename "$file")
            tag=${tag#Dockerfile.}
            # If no tag found, use a default value
            [ -z "$tag" ] && tag="default"
            # Remove any leading "./"
            dockerfile=$(echo "$file" | sed 's|^\./||')
            matrix="$matrix$sep{\"dockerfile\":\"$dockerfile\",\"image_tag\":\"$tag\"}"
            sep=","
          done
          matrix="$matrix]}"
          echo "Generated matrix: $matrix"
          echo "matrix=$matrix" >> $GITHUB_OUTPUT

  build-and-test:
    needs: generate-matrix
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      matrix: ${{ fromJson(needs.generate-matrix.outputs.matrix) }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Sanitize tag name
        id: sanitize
        run: |
          safe_ref=$(echo "${{ github.ref_name }}" | sed 's#[/:\_@~^ #]#-#g')
          echo "safe_ref=${safe_ref}" >> $GITHUB_OUTPUT

      - name: Build Docker image
        id: build
        uses: docker/build-push-action@v6.14.0
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          file: ${{ matrix.dockerfile }}
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.sanitize.outputs.safe_ref }}-${{ matrix.image_tag }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            PLAYWRIGHT_VERSION=${{ matrix.playwright }}
