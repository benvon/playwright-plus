name: Docker Security Scan

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  schedule:
    - cron: '0 0 * * 0'  # Weekly on Sundays

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  security-scan:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Set up BuildKit Docker container builder
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.8.0

      # Build image locally for scanning
      - name: Build Docker image
        uses: docker/build-push-action@v6.12.0
        with:
          context: .
          load: true  # Load the image locally instead of pushing
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:test-security
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:test-security
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'
          skip-dirs: '/root/.npm/_cacache/content-v2'

      - name: Dockerfile lint
        uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: Dockerfile

      - name: Install Dockle
        run: |
          VERSION=$(curl --silent "https://api.github.com/repos/goodwithtech/dockle/releases/latest" | grep '"tag_name":' | sed -E 's/.*"v([^"]+)".*/\1/')
          curl -L -o dockle.deb "https://github.com/goodwithtech/dockle/releases/download/v${VERSION}/dockle_${VERSION}_Linux-64bit.deb"
          sudo dpkg -i dockle.deb

      - name: Run Dockle
        run: |
          dockle --format json --exit-code 1 --ignore CIS-DI-0001 ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:test-security

      - name: Container Structure Test
        uses: plexsystems/container-structure-test-action@v0.3.0
        with:
          image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:test-security
          config: .container-structure-test.yaml 